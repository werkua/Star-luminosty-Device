#include <iostream>
#include<vector>
#include<algorithm>


template<class T>
class Kolejka{
public:
    unsigned int max_size;
    std::vector<T> v;

    Kolejka(unsigned int N): max_size{N}{}
    T wyjmij();
    void wstaw(T);
    T min();
    T max();
    int ile_wiekszych_od(T);
    bool wszystkie_wieksze_od(T);
    void usun_mniejsze_od(T);
    void ustaw_losowo();
    void posortuj_rosnaco();
    void posortuj_malejaco();
};

template<class T>
void Kolejka<T>::wstaw(T a){
    if(v.size()< max_size)
        v.push_back(a);
}
template<class T>
T Kolejka<T>::wyjmij(){
    T temp = v[0];
    v.erase(v.begin());
return temp;
}
template<class T>
std::ostream& operator<< (std::ostream& os, const Kolejka<T>& k){
    for_each(k.v.begin(), k.v.end(), [&](T i){os<<i<<' ';});
return os;
}
template<class T>
T Kolejka<T>::max(){
    return *max_element(v.begin(), v.end());
}
template<class T>
T Kolejka<T>::min(){
    return *min_element(v.begin(), v.end());
}
template<class T>
int Kolejka<T>::ile_wiekszych_od(T a){
    return count_if(v.begin(), v.end(), [=](T i){return i> a;} );
}
template<class T>
bool Kolejka<T>::wszystkie_wieksze_od(T a){
    return all_of(v.begin(), v.end(), [=](T i){return i>a;});
}
template<class T>
void Kolejka<T>::usun_mniejsze_od(T a){
    v.erase(std::remove_if(v.begin(), v.end(),[=](T i){return i<a;}), v.end());
}
template<class T>
void Kolejka<T>::ustaw_losowo(){
    random_shuffle(v.begin(), v.end());
}
template<class T>
void Kolejka<T>::posortuj_rosnaco(){
    sort(v.begin(), v.end());
}
template<class T>
void Kolejka<T>::posortuj_malejaco(){
    sort(v.rbegin(), v.rend());
}

int main()
{
// ------- TEST 1 ----------
srand((unsigned)time(NULL));
    int N = 10;
    Kolejka<double> k(N);
    for(int i = 0; i<N; i++){
    double r = 1.0*rand()/RAND_MAX;
    k.wstaw(10*r);
    }
    std::cout<<k<<std::endl;
    k.wyjmij();
    std::cout<<k<<std::endl;
    std::cout<<"max = "<<k.max()<<std::endl;
    std::cout<<"min = "<<k.min()<<std::endl;
    std::cout<<"ile_wiekszych_od: "<<k.ile_wiekszych_od(3)<<std::endl;
    std::cout<<"wszystkie_wieksze_od:"<<k.wszystkie_wieksze_od(0)<<std::endl;
    k.usun_mniejsze_od(5);
    std::cout<<k<<std::endl;
    k.ustaw_losowo();
    std::cout<<"ustaw_losowo"<<std::endl;
    std::cout<<k<<std::endl;
    k.posortuj_rosnaco();
    std::cout<<"posortuj_rosnaco"<<std::endl;
    std::cout<<k<<std::endl;
    std::cout<<"posortuj_malejaco"<<std::endl;
    k.posortuj_malejaco();
    std::cout<<k<<std::endl;




}
